import{_ as t,p as e,q as a,Z as r}from"./framework-87c4c4c1.js";const l={},i=r('<h1 id="var、let、const的区别" tabindex="-1"><a class="header-anchor" href="#var、let、const的区别" aria-hidden="true">#</a> <strong>var、let、const的区别</strong></h1><h3 id="javascript是如何执行的" tabindex="-1"><a class="header-anchor" href="#javascript是如何执行的" aria-hidden="true">#</a> JavaScript是如何执行的？</h3><ul><li>考察 JS 基础</li><li>暂时性死区</li></ul><h3 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h3><p>相同点：</p><ol><li>let、const 都没有变量提升</li><li>let、const 都是一个块作用域</li><li>let、const 都不能重复声明</li><li>let、const 暂时性死区（只要作用域内存在let、const，他们所声明的变量或常量就自动“绑定”这个区域，不再受到外部作用域的影响）</li></ol><p>不同点：<br> const一旦初始化之后，就不能重新赋值，否则会报错。<br></p>',7),c=[i];function n(s,o){return e(),a("div",null,c)}const d=t(l,[["render",n],["__file","var.html.vue"]]);export{d as default};
