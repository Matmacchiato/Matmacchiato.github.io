import{_ as t,p as s,q as n,Z as a}from"./framework-87c4c4c1.js";const p="/imgs/source/12.1.png",e={},o=a('<h1 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>接口是 前后端通信的桥梁<br> 简单理解：一个接口就是 服务中的一个路由规则，根据请求响应结果<br> 接口的英文单词是 API（Application Program Interface），所以有时也称之为API接口<br></p><h2 id="_2-接口的组成" tabindex="-1"><a class="header-anchor" href="#_2-接口的组成" aria-hidden="true">#</a> 2. 接口的组成</h2><p>一个接口一般由如下几个部分组成<br></p><ul><li>请求方法</li><li>接口地址（URL）</li><li>请求参数</li><li>响应结果 <br></li></ul><p><img src="'+p+`" alt="image.png"></p><h2 id="_3-restful-api" tabindex="-1"><a class="header-anchor" href="#_3-restful-api" aria-hidden="true">#</a> 3. RESTful API</h2><p>RESTful API 是一种特殊风格的接口，主要特点有如下几个：<br></p><ul><li>URL中的路径表示 资源，路径中不能有动词，例如 create，delete，update 等这些都不能用</li><li>操作资源要与HTTP请求方法 对应</li><li>操作结果要与HTTP 响应状态码对应</li></ul><p>规则实例：</p><table><thead><tr><th>操作</th><th>请求类型</th><th>URL</th><th>返回</th></tr></thead><tbody><tr><td>新增歌曲</td><td>POST</td><td>/song</td><td>返回新生成的歌曲信息</td></tr><tr><td>删除歌曲</td><td>DELETE</td><td>/song/10</td><td>返回一个空文档</td></tr><tr><td>修改歌曲</td><td>PUT</td><td>/song/10</td><td>返回更新后的歌曲信息</td></tr><tr><td>修改歌曲</td><td>PATCH</td><td>/song/10</td><td>返回更新后的歌曲信息</td></tr><tr><td>获取所有歌曲</td><td>GET</td><td>/song</td><td>返回歌曲列表数组</td></tr><tr><td>获取单个歌曲</td><td>GET</td><td>/song/10</td><td>返回单个歌曲信息</td></tr></tbody></table><h2 id="_4-json-server" tabindex="-1"><a class="header-anchor" href="#_4-json-server" aria-hidden="true">#</a> 4. json-server</h2><p>json-server本身是一个JS编写的工具包，可以快速搭建RESTful API服务<br> 操作步骤：<br></p><ol><li>全局安装 json-server</li></ol><blockquote><p>npm i -g json-server</p></blockquote><ol start="2"><li>创建JSON文件（db.json），编写基本结构</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;song&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;干杯&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;singer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;五月天&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;当&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;singer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;动力火车&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;不能说的秘密&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;singer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;周杰伦&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>以 JSON 文件所在文件夹作为工作目录，执行如下命令</li></ol><blockquote><p>json-server --watch db.json</p></blockquote><p>默认监听端口为3000</p><h2 id="_5-接口测试工具" tabindex="-1"><a class="header-anchor" href="#_5-接口测试工具" aria-hidden="true">#</a> 5. 接口测试工具</h2><p>介绍几个接口测试工具</p><ul><li>apipost https://www.apipost.cn/ (中文)</li><li>apifox https://www.apifox.cn/ (中文)</li><li>postman https://www.postman.com/ (英文)</li></ul>`,24),r=[o];function i(l,c){return s(),n("div",null,r)}const u=t(e,[["render",i],["__file","12.html.vue"]]);export{u as default};
