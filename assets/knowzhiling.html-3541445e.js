import{_ as t,p as r,q as d,Z as o}from"./framework-87c4c4c1.js";const n={},e=o('<h1 id="知道哪些指令" tabindex="-1"><a class="header-anchor" href="#知道哪些指令" aria-hidden="true">#</a> 知道哪些指令</h1><hr><table><thead><tr><th><strong>v-if</strong></th><th>根据表达式的值的真假条件渲染元素。在切换时元素及它的数据绑定 / 组件被销毁并重建。</th></tr></thead><tbody><tr><td><strong>v-show</strong></td><td>根据表达式之真假值，切换元素的 display CSS 属性。</td></tr><tr><td><strong>v-for</strong></td><td>循环指令，基于一个数组或者对象渲染一个列表，vue 2.0以上必须需配合 key值 使用。</td></tr><tr><td><strong>v-bind</strong></td><td>动态地绑定一个或多个特性，或一个组件 prop 到表达式。</td></tr><tr><td><strong>v-on</strong></td><td>用于监听指定元素的DOM事件，比如点击事件。绑定事件监听器。</td></tr><tr><td><strong>v-model</strong></td><td>实现表单输入和应用状态之间的双向绑定</td></tr><tr><td><strong>v-pre</strong></td><td>跳过这个元素和它的子元素的编译过程。可以用来显示原始 Mustache 标签。跳过大量没有指令的节点会加快编译。</td></tr><tr><td><strong>v-once</strong></td><td>只渲染元素和组件一次。随后的重新渲染，元素/组件及其所有的子节点将被视为静态内容并跳过。这可以用于优化更新性能。</td></tr></tbody></table>',3),s=[e];function a(h,c){return r(),d("div",null,s)}const g=t(n,[["render",a],["__file","knowzhiling.html.vue"]]);export{g as default};
