import{_ as n,p as a,q as s,Z as t}from"./framework-87c4c4c1.js";const e="/imgs/source/eventloop.png",o={},p=t('<h1 id="请描述event-loop的机制" tabindex="-1"><a class="header-anchor" href="#请描述event-loop的机制" aria-hidden="true">#</a> <strong>请描述event loop的机制</strong></h1><h3 id="javascript是如何执行的" tabindex="-1"><a class="header-anchor" href="#javascript是如何执行的" aria-hidden="true">#</a> JavaScript是如何执行的？</h3><ul><li>自上而下，从左到右一行一行执行</li><li>如果有一行报错，后面的代码不执行</li><li>先执行同步代码，再执行异步代码（setTimeout、ajax）</li></ul><h3 id="event-loop-过程" tabindex="-1"><a class="header-anchor" href="#event-loop-过程" aria-hidden="true">#</a> Event Loop 过程</h3><ol><li>同步代码，一行一行放在 Call Stack 中执行</li><li>遇到异步，会先“记录”下代码，等待执行时机（setTimeout、ajax）。时机到了，将之前“记录”的代码放到Callback Queue</li><li>当Call Stack 为空（同步代码执行完），Event Loop开始工作</li><li>Event Loop 轮训查找 Callback Queue 中是否有可执行的代码，如果有，将代码移动到Call Stack 中执行</li><li>Event Loop 如果没有找到可以执行代码，则会继续轮询查找</li></ol><p><img src="'+e+`" alt="event loop"></p><h3 id="演示代码" tabindex="-1"><a class="header-anchor" href="#演示代码" aria-hidden="true">#</a> 演示代码</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;setTimeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),l=[p];function i(c,u){return a(),s("div",null,l)}const d=n(o,[["render",i],["__file","EventLoop.html.vue"]]);export{d as default};
