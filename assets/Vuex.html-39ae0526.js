import{_ as s,p as o,q as a,s as t,R as e}from"./framework-87c4c4c1.js";const n={},c=t("h1",{id:"说一说vuex",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#说一说vuex","aria-hidden":"true"},"#"),e(" 说一说Vuex")],-1),i=t("hr",null,null,-1),r=t("p",null,[e("Vuex是全局状态管理仓库，有"),t("strong",null,"state，mutations，actions，getters，modules"),e("属性。")],-1),u=t("p",null,"**state：**类似于组件中的data，存放数据 **mutations：**类似于组件中的methods **actions：**提交mutations的 **getter：**类似于组件中的computed **modules：**把以上4个属性再细分，让仓库更好管理",-1),l=t("p",null,[t("strong",null,"使用方法："),e(" 先在vue实例全局引入store，在组件中，使用state中的数据，直接调用this.$store.state,getters也是一样的。调用actions中的方法，使用this.$store.dispatch( )派发actions，调用mutations中的方法，使用this.$store.commit( ) 或者使用mapState，mapGetters，mapActions，mapMutations一次性引入多个属性和方法")],-1),_=[c,i,r,u,l];function d(h,m){return o(),a("div",null,_)}const x=s(n,[["render",d],["__file","Vuex.html.vue"]]);export{x as default};
