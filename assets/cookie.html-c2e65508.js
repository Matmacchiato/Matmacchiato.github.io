import{_ as e,p as o,q as a,Z as r}from"./framework-87c4c4c1.js";const i="/imgs/source/cookie.png",t={},n=r('<h1 id="cookie-的理解" tabindex="-1"><a class="header-anchor" href="#cookie-的理解" aria-hidden="true">#</a> <strong>Cookie 的理解</strong></h1><h3 id="由来" tabindex="-1"><a class="header-anchor" href="#由来" aria-hidden="true">#</a> 由来</h3><p>cookie的最初是用来维持状态的，例如有五个页面，每一个页面都添加不同的商品到购物车里面，这个时候就需要有cookie这个东西产生，把页面添加的所有商品全部记录在cookie中，然后cookie附带着每个HTTP请求，这样服务器就可以知道用户一共选购了哪些内容。</p><h3 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h3><p><img src="'+i+'" alt="cookie"> 首先浏览器会以一种无状态的方式，去向服务器发起HTTP请求，服务器接收到请求之后，会在请求上的 respond header 上，加上cookie相关的信息，然后返回给浏览器，浏览器后面再向服务器发起请求的时候，都会同步的带上cookie，那这样cookie就会附带在每个HTTP请求上，服务器也可以根据这些信息来进行相关的逻辑判断。</p><h3 id="生成机制" tabindex="-1"><a class="header-anchor" href="#生成机制" aria-hidden="true">#</a> 生成机制</h3><ol><li>服务端生成，在 <strong>Http Response Header</strong> 中 <strong>Set-Cookie。</strong></li><li>客户端生成，通过 <strong>document.cookie</strong> 设置。</li></ol><h3 id="缺陷" tabindex="-1"><a class="header-anchor" href="#缺陷" aria-hidden="true">#</a> 缺陷</h3><p>Cookie设计初衷用于 <strong>维持HTTP状态</strong>，不用于 <strong>存储数据</strong>。</p><h3 id="大小限制" tabindex="-1"><a class="header-anchor" href="#大小限制" aria-hidden="true">#</a> 大小限制</h3><p>每个cookie 项只能存储<strong>4k</strong>数据。</p><h3 id="性能浪费" tabindex="-1"><a class="header-anchor" href="#性能浪费" aria-hidden="true">#</a> 性能浪费</h3><p>cookie 附带在 http 请求上，数据量过大，会导致每个 http 请求就非常庞大。</p>',13),c=[n];function h(s,d){return o(),a("div",null,c)}const k=e(t,[["render",h],["__file","cookie.html.vue"]]);export{k as default};
