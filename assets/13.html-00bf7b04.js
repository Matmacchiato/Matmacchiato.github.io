import{_ as n,p as s,q as a,Z as t}from"./framework-87c4c4c1.js";const p="/imgs/source/13.1.png",e="/imgs/source/13.2.png",o="/imgs/source/13.3.png",c="/imgs/source/13.4.png",i="/imgs/source/13.5.png",l="/imgs/source/13.6.png",u={},k=t('<h1 id="会话控制" tabindex="-1"><a class="header-anchor" href="#会话控制" aria-hidden="true">#</a> 会话控制</h1><h2 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍" aria-hidden="true">#</a> 1. 介绍</h2><p>所谓会话控制就是 对会话进行控制 <br> HTTP 是一种无状态的协议，它没有办法区分多次的请求是否来自于同一个客户端， 无法区分用户 <br> 而产品中又大量存在的这样的需求，所以我们需要通过 会话控制 来解决该问题 <br> 常见的会话控制技术有三种：</p><ul><li>cookie</li><li>session</li><li>token</li></ul><h2 id="_2-cookie" tabindex="-1"><a class="header-anchor" href="#_2-cookie" aria-hidden="true">#</a> 2. cookie</h2><p>cookie 是 HTTP 服务器发送到用户浏览器并保存在本地的一小块数据 <br> cookie 是保存在浏览器端的一小块数据 <br> cookie 是按照域名划分保存的<br> 例子：</p><table><thead><tr><th>域名</th><th>cookie</th></tr></thead><tbody><tr><td>www.baidu.com</td><td>a=100;b=200</td></tr><tr><td>www.bilibili.com</td><td>xid=1020abce121; hm=112411213</td></tr><tr><td>jd.com</td><td>x=100;ocw=12414cce</td></tr></tbody></table><h3 id="_1-cookie的特点" tabindex="-1"><a class="header-anchor" href="#_1-cookie的特点" aria-hidden="true">#</a> (1). cookie的特点</h3><p>浏览器向服务器发送请求时，会自动将 当前域名下 可用的 cookie 设置在请求头中，然后传递给服务器<br> 这个请求头的名字也叫 cookie ，所以将 cookie 理解为一个 HTTP 的请求头也是可以的<br></p><h3 id="_2-cookie的运行流程" tabindex="-1"><a class="header-anchor" href="#_2-cookie的运行流程" aria-hidden="true">#</a> (2). cookie的运行流程</h3><p>填写账号和密码校验身份，校验通过后再发cookie<br><img src="'+p+'" alt="image.png"> 有了cookie之后，后续向服务器发送请求时，就会自动携带cookie<br><img src="'+e+`" alt="image.png"></p><h3 id="_3-浏览器操作cookie" tabindex="-1"><a class="header-anchor" href="#_3-浏览器操作cookie" aria-hidden="true">#</a> (3). 浏览器操作cookie</h3><p>浏览器操作cookie的操作，使用相对较少</p><ul><li>禁用所有cookie</li><li>删除cookie</li><li>查看cookie</li></ul><h3 id="_4-cookie的代码操作" tabindex="-1"><a class="header-anchor" href="#_4-cookie的代码操作" aria-hidden="true">#</a> (4). cookie的代码操作</h3><p>express中可以使用 cookie-parser 进行处理</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//1. 安装 cookie-parser npm i cookie-parser</span>
<span class="token comment">//2. 引入 cookieParser 包</span>
<span class="token keyword">const</span> cookieParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;cookie-parser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//3. 设置 cookieParser 中间件</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cookieParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//4-1 设置 cookie</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/set-cookie&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 不带时效性</span>
    response<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;wangwu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 带时效性</span>
    response<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;23123456@qq.com&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">maxAge</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//响应</span>
    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie的设置&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//4-2 读取 cookie</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/get-cookie&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//读取 cookie</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//响应体</span>
    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Cookie的读取&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//4-3 删除cookie</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/delete-cookie&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//删除</span>
    response<span class="token punctuation">.</span><span class="token function">clearCookie</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//响应</span>
    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;cookie 的清除&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//4. 启动服务</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;服务已经启动....&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>不同浏览器中的cookie是相互独立的，不共享</p></blockquote><h2 id="_3-session" tabindex="-1"><a class="header-anchor" href="#_3-session" aria-hidden="true">#</a> 3. session</h2><h3 id="_1-session是什么" tabindex="-1"><a class="header-anchor" href="#_1-session是什么" aria-hidden="true">#</a> (1). session是什么</h3><p>session是保存在 服务器端的一块儿数据，保存当前访问用户的相关信息</p><h3 id="_2-session的作用" tabindex="-1"><a class="header-anchor" href="#_2-session的作用" aria-hidden="true">#</a> (2). session的作用</h3><p>实现会话控制，可以识别用户的身份，快速获取当前用户的相关信息</p><h3 id="_3-session运行流程" tabindex="-1"><a class="header-anchor" href="#_3-session运行流程" aria-hidden="true">#</a> (3). session运行流程</h3><p>填写账号和密码校验身份，校验通过后创建 session信息，然后将session_id 的值通过响应头返回给浏览器<br><img src="`+o+'" alt="image.png"> 有了cookie，下次发送请求时就会自动携带cookie，服务器通过cookie中的session_id的值确定用户的身份<br><img src="'+c+`" alt="image.png"></p><h3 id="_4-session的代码操作" tabindex="-1"><a class="header-anchor" href="#_4-session的代码操作" aria-hidden="true">#</a> (4). session的代码操作</h3><p>express中可以使用 express-session 对session进行操作</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//1. 安装包 npm i express-session connect-mongo</span>
<span class="token comment">//2. 引入 express-session connect-mongo</span>
<span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express-session&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> MongoStore <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;connect-mongo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//3. 设置 session 的中间件</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;sid&#39;</span><span class="token punctuation">,</span> <span class="token comment">//设置cookie的name，默认值是：connect.sid</span>
    secret<span class="token operator">:</span> <span class="token string">&#39;atguigu&#39;</span><span class="token punctuation">,</span> <span class="token comment">//参与加密的字符串（又称签名）</span>
    saveUninitialized<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//是否为每次请求都设置一个cookie用来存储session的id</span>
    resave<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//是否在每次请求时重新保存session</span>
    store<span class="token operator">:</span> MongoStore<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        mongoUrl<span class="token operator">:</span> <span class="token string">&#39;mongodb://127.0.0.1:27017/project&#39;</span> <span class="token comment">//数据库的连接配置</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    cookie<span class="token operator">:</span> <span class="token punctuation">{</span>
        httpOnly<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启后前端无法通过 JS 操作</span>
        maxAge<span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">300</span> <span class="token comment">// 这一条 是控制 sessionID 的过期时间的！！！</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//创建 session</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//设置session</span>
    req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">;</span>
    req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>email <span class="token operator">=</span> <span class="token string">&#39;zhangsan@qq.com&#39;</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;登录成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//获取 session</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/home&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;session的信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">你好 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;登录 注册&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//销毁 session</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/logout&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//销毁session</span>
    <span class="token comment">// res.send(&#39;设置session&#39;);</span>
    req<span class="token punctuation">.</span>session<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;成功退出&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;服务已经启动, 端口 &#39;</span> <span class="token operator">+</span> <span class="token number">3000</span> <span class="token operator">+</span> <span class="token string">&#39; 监听中...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-session-和-cookie-的区别" tabindex="-1"><a class="header-anchor" href="#_4-session-和-cookie-的区别" aria-hidden="true">#</a> 4. session 和 cookie 的区别</h2><p>cookie 和 session 的区别主要有如下几点：</p><ol><li>存在的位置</li></ol><ul><li>cookie：浏览器端</li><li>session：服务端</li></ul><ol start="2"><li>安全性</li></ol><ul><li>cookie 是以明文的方式存放在客户端的，安全性相对较低</li><li>session 存放于服务器中，所以安全性 相对 较好</li></ul><ol start="3"><li>网络传输量</li></ol><ul><li>cookie 设置内容过多会增大报文体积， 会影响传输效率</li><li>session 数据存储在服务器，只是通过 cookie 传递 id，所以不影响传输效率</li></ul><ol start="4"><li>存储限制</li></ol><ul><li>浏览器限制单个 cookie 保存的数据不能超过 4K ，且单个域名下的存储数量也有限制</li><li>session 数据存储在服务器中，所以没有这些限制</li></ul><h2 id="_5-token" tabindex="-1"><a class="header-anchor" href="#_5-token" aria-hidden="true">#</a> 5. token</h2><h3 id="_1-token-是什么" tabindex="-1"><a class="header-anchor" href="#_1-token-是什么" aria-hidden="true">#</a> (1). token 是什么</h3><p>token 是服务端生成并返回给 HTTP 客户端的一串加密字符串， token 中保存着 用户信息</p><h3 id="_2-token-的作用" tabindex="-1"><a class="header-anchor" href="#_2-token-的作用" aria-hidden="true">#</a> (2). token 的作用</h3><p>实现会话控制，可以识别用户的身份，主要用于移动端 APP</p><h3 id="_3-token-的工作流程" tabindex="-1"><a class="header-anchor" href="#_3-token-的工作流程" aria-hidden="true">#</a> (3). token 的工作流程</h3><p>填写账号和密码校验身份，校验通过后响应token，token一般是在响应体中返回给客户端<br><img src="`+i+'" alt="image.png"> 后续发送请求时，需要手动将token添加到请求报文中，一般是放在请求头中<br><img src="'+l+`" alt="image.png"></p><h3 id="_4-token的特点" tabindex="-1"><a class="header-anchor" href="#_4-token的特点" aria-hidden="true">#</a> (4). token的特点</h3><ol><li>服务端压力更小 （数据存储在客户端 ）</li></ol><ul><li>相对更安全</li></ul><ol start="2"><li>数据加密</li></ol><ul><li>可以避免 CSRF（跨站请求伪造）</li></ul><ol start="3"><li>扩展性更强</li></ol><ul><li>服务间可以共享</li><li>增加服务节点更简单</li></ul><h3 id="_5-jwt" tabindex="-1"><a class="header-anchor" href="#_5-jwt" aria-hidden="true">#</a> (5). JWT</h3><p>JWT（JSON Web Token ）是目前最流行的跨域认证解决方案，可用于基于 token 的身份验证 <br> JWT 使 token 的生成与校验更规范 <br> 我们可以使用 jsonwebtoken 包 来操作 token<br></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//导入 jsonwebtokan</span>
<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsonwebtoken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//创建 token</span>
<span class="token comment">// jwt.sign(数据, 加密字符串, 配置对象)</span>
<span class="token keyword">let</span> token <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;zhangsan&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;atguigu&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">expiresIn</span><span class="token operator">:</span> <span class="token number">60</span> <span class="token comment">//单位是 秒</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//解析 token</span>
jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> <span class="token string">&#39;atguigu&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;校验失败~~&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,55),r=[k];function d(m,v){return s(),a("div",null,r)}const h=n(u,[["render",d],["__file","13.html.vue"]]);export{h as default};
